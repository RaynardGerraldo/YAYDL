#!/bin/sh

choice=""
download_dir="."
link="$1"

# main function
download(){
    case $choice in 
        a)
            if printf '%s' "$link" | grep -q "playlist"; then
                yt-dlp --progress --console-title --extract-audio --audio-format mp3 -o '%(playlist_title)s/%(title)s-%(id)s.%(ext)s' "$link"
            else
                yt-dlp --progress --console-title --extract-audio --audio-format mp3 -o "$download_dir/%(title)s.%(ext)s" "$link"
            fi
            ;;

        v)
            if printf '%s' "$link" | grep -q "playlist"; then
                yt-dlp --progress --console-title -f "bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best" -o '%(playlist_title)s/%(title)s-%(id)s.%(ext)s' "$link"
            else
                yt-dlp --progress --console-title -f "bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best" -o "$download_dir/%(title)s.%(ext)s" "$link"
            fi;;
    esac
}

### MENU ###
#Thanks https://github.com/pystardust/ani-cli/
menu_line_even () {
	# displays an even (cyan) line of a menu line with $2 as an indicator in [] and $1 as the option
	printf "\033[1;34m[\033[1;36m%s\033[1;34m] \033[1;36m%s\033[0m\n" "$2" "$1"
}

menu_line_odd() {
	# displays an odd (yellow) line of a menu line with $2 as an indicator in [] and $1 as the option
	printf "\033[1;34m[\033[1;33m%s\033[1;34m] \033[1;33m%s\033[0m\n" "$2" "$1"
}

prompt () {
	# prompts the user with message in $1-2 ($1 in blue, $2 in magenta) and saves the input to the variables in $REPLY and $REPLY2
	printf "\033[1;34m%s\033[1;34m: \033[0m" "$1"
}

menu_line_alternate() {
	menu_line_parity=${menu_line_parity:-0}
	if [ "$menu_line_parity" -eq 0 ]; then
		menu_line_odd "$1" "$2"
		menu_line_parity=1
	else
		menu_line_even "$1" "$2"
		menu_line_parity=0
	fi
}

prompt_link(){
    prompt "Enter link" 
    read -r link
}

download_prompt(){
    printf "\033\033[1;33m%s\n" "Download location?"
    prompt "Type in your download location of choice here, will default to current directory if none"
    read -r download_dir
    if [ -z "$download_dir" ]; then
        download_dir='.' 
    fi
}
if [ -z "$link" ]; then 
    prompt_link 
fi

select_prompt(){
    menu_line_alternate "Audio" "a"
    menu_line_alternate "Video" "v"
    prompt "Enter choice"
    read -r choice
}

select_prompt
download_prompt
download "$1"

if [ $? != 0 ];then 
    tput clear
    menu_line_alternate "Download failed, retry?" "r"
    prompt "Enter choice"
    read -r choice
    if [ "$choice" = "r" ];then
        prompt_link
        select_prompt
        download_prompt
        download
    else
        exit
    fi
else
    printf "Download complete!\n"
fi
